/* @generated */
// deno-lint-ignore-file
/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../graphqlContext.ts"
import type { GraphqlBfNode, GraphqlNode } from "./../types/graphqlBfNode.ts"
import type { core, connectionPluginCore } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A scalar that only accepts a valid JSON string. It returns the same valid JSON string on output.
     */
    jsonString<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSONString";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A scalar that only accepts a valid JSON string. It returns the same valid JSON string on output.
     */
    jsonString<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSONString";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName> & { count?: connectionPluginCore.ConnectionFieldResolver<TypeName, FieldName, "count"> }
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  JSON: any
  JSONString: any
}

export interface NexusGenObjects {
  Analytics: { // root type
    tbd?: string | null; // String
  }
  BfBlog: { // root type
    id: string; // ID!
    name?: string | null; // String
  }
  BfBlogPost: { // root type
    author?: string | null; // String
    content?: string | null; // String
    cta?: string | null; // String
    id: string; // ID!
    slug?: string | null; // String
    summary?: string | null; // String
    title?: string | null; // String
  }
  BfBlogPostConnection: { // root type
    count?: number | null; // Int
    edges?: Array<NexusGenRootTypes['BfBlogPostEdge'] | null> | null; // [BfBlogPostEdge]
    nodes?: Array<NexusGenRootTypes['BfBlogPost'] | null> | null; // [BfBlogPost]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  BfBlogPostEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['BfBlogPost'] | null; // BfBlogPost
  }
  BfContentCollection: { // root type
    description?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    slug?: string | null; // String
  }
  BfContentItem: { // root type
    body?: string | null; // String
    id: string; // ID!
    slug?: string | null; // String
    title?: string | null; // String
  }
  BfContentItemConnection: { // root type
    count?: number | null; // Int
    edges?: Array<NexusGenRootTypes['BfContentItemEdge'] | null> | null; // [BfContentItemEdge]
    nodes?: Array<NexusGenRootTypes['BfContentItem'] | null> | null; // [BfContentItem]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  BfContentItemEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['BfContentItem'] | null; // BfContentItem
  }
  BfCurrentViewerLoggedIn: { // root type
    id: string; // ID!
  }
  BfCurrentViewerLoggedOut: { // root type
    id: string; // ID!
  }
  BfOrganization: { // root type
    analytics?: NexusGenRootTypes['Analytics'] | null; // Analytics
    creation?: NexusGenRootTypes['Creation'] | null; // Creation
    distribution?: NexusGenRootTypes['Distribution'] | null; // Distribution
    id: string; // ID!
    identity?: NexusGenRootTypes['BfOrganization_Identity'] | null; // BfOrganization_Identity
    research?: NexusGenRootTypes['BfOrganization_Research'] | null; // BfOrganization_Research
  }
  BfOrganization_Identity: { // root type
    twitter?: NexusGenRootTypes['Twitter'] | null; // Twitter
    voice?: NexusGenRootTypes['Voice'] | null; // Voice
  }
  BfOrganization_Research: { // root type
    topics?: Array<NexusGenRootTypes['ResearchTopic'] | null> | null; // [ResearchTopic]
  }
  BfPerson: { // root type
    id: string; // ID!
    name?: string | null; // String
  }
  Creation: { // root type
    draftBlog?: string | null; // String
    originalText?: string | null; // String
    revisions?: Array<NexusGenRootTypes['Revisions'] | null> | null; // [Revisions]
    suggestions?: Array<NexusGenRootTypes['Suggestion'] | null> | null; // [Suggestion]
  }
  Distribution: { // root type
    tbd?: string | null; // String
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  RecommendationItem: { // root type
    confidence?: number | null; // Float
    explanation?: string | null; // String
    recommendedText?: string | null; // String
    sourceText?: string | null; // String
  }
  Recommendations: { // root type
    recommendations?: Array<NexusGenRootTypes['RecommendationItem'] | null> | null; // [RecommendationItem]
  }
  ResearchEntry: { // root type
    name?: string | null; // String
    summary?: string | null; // String
    type?: string | null; // String
    url?: string | null; // String
  }
  ResearchTopic: { // root type
    entries?: Array<NexusGenRootTypes['ResearchEntry'] | null> | null; // [ResearchEntry]
    name?: string | null; // String
  }
  Revisions: { // root type
    explanation?: string | null; // String
    original?: string | null; // String
    revision?: string | null; // String
    revisionTitle?: string | null; // String
  }
  Suggestion: { // root type
    explanation?: string | null; // String
    tweet?: string | null; // String
  }
  Twitter: { // root type
    handle?: string | null; // String
    imgUrl?: string | null; // String
    name?: string | null; // String
  }
  Voice: { // root type
    voice?: string | null; // String
    voiceSummary?: string | null; // String
  }
  YCRecommendationItem: { // root type
    confidence?: number | null; // Float
    explanation?: string | null; // String
    revision?: string | null; // String
  }
  YCRecommendations: { // root type
    companySummary?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    competitors?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    equityBreakdown?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    investmentsReceived?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    locationDecision?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    moneyMaking?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    otherIdeas?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    otherIncubators?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    previousApplicationChange?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    productSummary?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    progress?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    reasonForApplying?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    reasonForProductChoice?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    revenueSource?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    techStack?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    whoToldYou?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    workLengthHistory?: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
  }
}

export interface NexusGenInterfaces {
  BfCurrentViewer: core.Discriminate<'BfCurrentViewerLoggedIn', 'required'> | core.Discriminate<'BfCurrentViewerLoggedOut', 'required'>;
  BfNode: GraphqlBfNode;
  Node: GraphqlNode;
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Analytics: { // field return type
    tbd: string | null; // String
  }
  BfBlog: { // field return type
    id: string; // ID!
    name: string | null; // String
    post: NexusGenRootTypes['BfBlogPost'] | null; // BfBlogPost
    posts: NexusGenRootTypes['BfBlogPostConnection'] | null; // BfBlogPostConnection
  }
  BfBlogPost: { // field return type
    author: string | null; // String
    content: string | null; // String
    cta: string | null; // String
    href: string | null; // String
    id: string; // ID!
    slug: string | null; // String
    summary: string | null; // String
    title: string | null; // String
  }
  BfBlogPostConnection: { // field return type
    count: number | null; // Int
    edges: Array<NexusGenRootTypes['BfBlogPostEdge'] | null> | null; // [BfBlogPostEdge]
    nodes: Array<NexusGenRootTypes['BfBlogPost'] | null> | null; // [BfBlogPost]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  BfBlogPostEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['BfBlogPost'] | null; // BfBlogPost
  }
  BfContentCollection: { // field return type
    description: string | null; // String
    id: string; // ID!
    items: NexusGenRootTypes['BfContentItemConnection'] | null; // BfContentItemConnection
    name: string | null; // String
    slug: string | null; // String
  }
  BfContentItem: { // field return type
    body: string | null; // String
    href: string | null; // String
    id: string; // ID!
    slug: string | null; // String
    title: string | null; // String
  }
  BfContentItemConnection: { // field return type
    count: number | null; // Int
    edges: Array<NexusGenRootTypes['BfContentItemEdge'] | null> | null; // [BfContentItemEdge]
    nodes: Array<NexusGenRootTypes['BfContentItem'] | null> | null; // [BfContentItem]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  BfContentItemEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['BfContentItem'] | null; // BfContentItem
  }
  BfCurrentViewerLoggedIn: { // field return type
    blog: NexusGenRootTypes['BfBlog'] | null; // BfBlog
    contentCollection: NexusGenRootTypes['BfContentCollection'] | null; // BfContentCollection
    id: string; // ID!
    organization: NexusGenRootTypes['BfOrganization'] | null; // BfOrganization
  }
  BfCurrentViewerLoggedOut: { // field return type
    blog: NexusGenRootTypes['BfBlog'] | null; // BfBlog
    contentCollection: NexusGenRootTypes['BfContentCollection'] | null; // BfContentCollection
    id: string; // ID!
    organization: NexusGenRootTypes['BfOrganization'] | null; // BfOrganization
  }
  BfOrganization: { // field return type
    analytics: NexusGenRootTypes['Analytics'] | null; // Analytics
    creation: NexusGenRootTypes['Creation'] | null; // Creation
    distribution: NexusGenRootTypes['Distribution'] | null; // Distribution
    id: string; // ID!
    identity: NexusGenRootTypes['BfOrganization_Identity'] | null; // BfOrganization_Identity
    research: NexusGenRootTypes['BfOrganization_Research'] | null; // BfOrganization_Research
  }
  BfOrganization_Identity: { // field return type
    twitter: NexusGenRootTypes['Twitter'] | null; // Twitter
    voice: NexusGenRootTypes['Voice'] | null; // Voice
  }
  BfOrganization_Research: { // field return type
    topics: Array<NexusGenRootTypes['ResearchTopic'] | null> | null; // [ResearchTopic]
  }
  BfPerson: { // field return type
    id: string; // ID!
    name: string | null; // String
  }
  Creation: { // field return type
    draftBlog: string | null; // String
    originalText: string | null; // String
    revisions: Array<NexusGenRootTypes['Revisions'] | null> | null; // [Revisions]
    suggestions: Array<NexusGenRootTypes['Suggestion'] | null> | null; // [Suggestion]
  }
  Distribution: { // field return type
    tbd: string | null; // String
  }
  Mutation: { // field return type
    checkEmail: boolean | null; // Boolean
    createVoice: NexusGenRootTypes['Voice'] | null; // Voice
    getLoginOptions: NexusGenScalars['JSONString'] | null; // JSONString
    login: NexusGenRootTypes['BfCurrentViewer'] | null; // BfCurrentViewer
    loginAsDemoPerson: NexusGenRootTypes['BfCurrentViewerLoggedIn'] | null; // BfCurrentViewerLoggedIn
    makeTweets: NexusGenRootTypes['Creation'] | null; // Creation
    register: NexusGenRootTypes['BfCurrentViewerLoggedIn'] | null; // BfCurrentViewerLoggedIn
    registrationOptions: NexusGenScalars['JSONString'] | null; // JSONString
    reviseBlog: NexusGenRootTypes['Creation'] | null; // Creation
    submitYcForm: NexusGenRootTypes['YCRecommendations'] | null; // YCRecommendations
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    bfNode: NexusGenRootTypes['BfNode'] | null; // BfNode
    me: NexusGenRootTypes['BfCurrentViewer'] | null; // BfCurrentViewer
  }
  RecommendationItem: { // field return type
    confidence: number | null; // Float
    explanation: string | null; // String
    recommendedText: string | null; // String
    sourceText: string | null; // String
  }
  Recommendations: { // field return type
    recommendations: Array<NexusGenRootTypes['RecommendationItem'] | null> | null; // [RecommendationItem]
  }
  ResearchEntry: { // field return type
    name: string | null; // String
    summary: string | null; // String
    type: string | null; // String
    url: string | null; // String
  }
  ResearchTopic: { // field return type
    entries: Array<NexusGenRootTypes['ResearchEntry'] | null> | null; // [ResearchEntry]
    name: string | null; // String
  }
  Revisions: { // field return type
    explanation: string | null; // String
    original: string | null; // String
    revision: string | null; // String
    revisionTitle: string | null; // String
  }
  Suggestion: { // field return type
    explanation: string | null; // String
    tweet: string | null; // String
  }
  Twitter: { // field return type
    handle: string | null; // String
    imgUrl: string | null; // String
    name: string | null; // String
  }
  Voice: { // field return type
    voice: string | null; // String
    voiceSummary: string | null; // String
  }
  YCRecommendationItem: { // field return type
    confidence: number | null; // Float
    explanation: string | null; // String
    revision: string | null; // String
  }
  YCRecommendations: { // field return type
    companySummary: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    competitors: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    equityBreakdown: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    investmentsReceived: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    locationDecision: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    moneyMaking: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    otherIdeas: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    otherIncubators: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    previousApplicationChange: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    productSummary: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    progress: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    reasonForApplying: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    reasonForProductChoice: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    revenueSource: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    techStack: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    whoToldYou: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
    workLengthHistory: NexusGenRootTypes['YCRecommendationItem'] | null; // YCRecommendationItem
  }
  BfCurrentViewer: { // field return type
    blog: NexusGenRootTypes['BfBlog'] | null; // BfBlog
    contentCollection: NexusGenRootTypes['BfContentCollection'] | null; // BfContentCollection
    id: string; // ID!
    organization: NexusGenRootTypes['BfOrganization'] | null; // BfOrganization
  }
  BfNode: { // field return type
    id: string; // ID!
  }
  Node: { // field return type
    id: string; // ID!
  }
}

export interface NexusGenFieldTypeNames {
  Analytics: { // field return type name
    tbd: 'String'
  }
  BfBlog: { // field return type name
    id: 'ID'
    name: 'String'
    post: 'BfBlogPost'
    posts: 'BfBlogPostConnection'
  }
  BfBlogPost: { // field return type name
    author: 'String'
    content: 'String'
    cta: 'String'
    href: 'String'
    id: 'ID'
    slug: 'String'
    summary: 'String'
    title: 'String'
  }
  BfBlogPostConnection: { // field return type name
    count: 'Int'
    edges: 'BfBlogPostEdge'
    nodes: 'BfBlogPost'
    pageInfo: 'PageInfo'
  }
  BfBlogPostEdge: { // field return type name
    cursor: 'String'
    node: 'BfBlogPost'
  }
  BfContentCollection: { // field return type name
    description: 'String'
    id: 'ID'
    items: 'BfContentItemConnection'
    name: 'String'
    slug: 'String'
  }
  BfContentItem: { // field return type name
    body: 'String'
    href: 'String'
    id: 'ID'
    slug: 'String'
    title: 'String'
  }
  BfContentItemConnection: { // field return type name
    count: 'Int'
    edges: 'BfContentItemEdge'
    nodes: 'BfContentItem'
    pageInfo: 'PageInfo'
  }
  BfContentItemEdge: { // field return type name
    cursor: 'String'
    node: 'BfContentItem'
  }
  BfCurrentViewerLoggedIn: { // field return type name
    blog: 'BfBlog'
    contentCollection: 'BfContentCollection'
    id: 'ID'
    organization: 'BfOrganization'
  }
  BfCurrentViewerLoggedOut: { // field return type name
    blog: 'BfBlog'
    contentCollection: 'BfContentCollection'
    id: 'ID'
    organization: 'BfOrganization'
  }
  BfOrganization: { // field return type name
    analytics: 'Analytics'
    creation: 'Creation'
    distribution: 'Distribution'
    id: 'ID'
    identity: 'BfOrganization_Identity'
    research: 'BfOrganization_Research'
  }
  BfOrganization_Identity: { // field return type name
    twitter: 'Twitter'
    voice: 'Voice'
  }
  BfOrganization_Research: { // field return type name
    topics: 'ResearchTopic'
  }
  BfPerson: { // field return type name
    id: 'ID'
    name: 'String'
  }
  Creation: { // field return type name
    draftBlog: 'String'
    originalText: 'String'
    revisions: 'Revisions'
    suggestions: 'Suggestion'
  }
  Distribution: { // field return type name
    tbd: 'String'
  }
  Mutation: { // field return type name
    checkEmail: 'Boolean'
    createVoice: 'Voice'
    getLoginOptions: 'JSONString'
    login: 'BfCurrentViewer'
    loginAsDemoPerson: 'BfCurrentViewerLoggedIn'
    makeTweets: 'Creation'
    register: 'BfCurrentViewerLoggedIn'
    registrationOptions: 'JSONString'
    reviseBlog: 'Creation'
    submitYcForm: 'YCRecommendations'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    bfNode: 'BfNode'
    me: 'BfCurrentViewer'
  }
  RecommendationItem: { // field return type name
    confidence: 'Float'
    explanation: 'String'
    recommendedText: 'String'
    sourceText: 'String'
  }
  Recommendations: { // field return type name
    recommendations: 'RecommendationItem'
  }
  ResearchEntry: { // field return type name
    name: 'String'
    summary: 'String'
    type: 'String'
    url: 'String'
  }
  ResearchTopic: { // field return type name
    entries: 'ResearchEntry'
    name: 'String'
  }
  Revisions: { // field return type name
    explanation: 'String'
    original: 'String'
    revision: 'String'
    revisionTitle: 'String'
  }
  Suggestion: { // field return type name
    explanation: 'String'
    tweet: 'String'
  }
  Twitter: { // field return type name
    handle: 'String'
    imgUrl: 'String'
    name: 'String'
  }
  Voice: { // field return type name
    voice: 'String'
    voiceSummary: 'String'
  }
  YCRecommendationItem: { // field return type name
    confidence: 'Float'
    explanation: 'String'
    revision: 'String'
  }
  YCRecommendations: { // field return type name
    companySummary: 'YCRecommendationItem'
    competitors: 'YCRecommendationItem'
    equityBreakdown: 'YCRecommendationItem'
    investmentsReceived: 'YCRecommendationItem'
    locationDecision: 'YCRecommendationItem'
    moneyMaking: 'YCRecommendationItem'
    otherIdeas: 'YCRecommendationItem'
    otherIncubators: 'YCRecommendationItem'
    previousApplicationChange: 'YCRecommendationItem'
    productSummary: 'YCRecommendationItem'
    progress: 'YCRecommendationItem'
    reasonForApplying: 'YCRecommendationItem'
    reasonForProductChoice: 'YCRecommendationItem'
    revenueSource: 'YCRecommendationItem'
    techStack: 'YCRecommendationItem'
    whoToldYou: 'YCRecommendationItem'
    workLengthHistory: 'YCRecommendationItem'
  }
  BfCurrentViewer: { // field return type name
    blog: 'BfBlog'
    contentCollection: 'BfContentCollection'
    id: 'ID'
    organization: 'BfOrganization'
  }
  BfNode: { // field return type name
    id: 'ID'
  }
  Node: { // field return type name
    id: 'ID'
  }
}

export interface NexusGenArgTypes {
  BfBlog: {
    post: { // args
      id?: string | null; // ID
    }
    posts: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  BfContentCollection: {
    items: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  BfCurrentViewerLoggedIn: {
    contentCollection: { // args
      slug?: string | null; // String
    }
  }
  BfCurrentViewerLoggedOut: {
    contentCollection: { // args
      slug?: string | null; // String
    }
  }
  Mutation: {
    checkEmail: { // args
      email: string; // String!
    }
    createVoice: { // args
      handle: string; // String!
    }
    getLoginOptions: { // args
      email: string; // String!
    }
    login: { // args
      authResp: NexusGenScalars['JSONString']; // JSONString!
      email: string; // String!
    }
    makeTweets: { // args
      tweet: string; // String!
    }
    register: { // args
      attResp: NexusGenScalars['JSONString']; // JSONString!
      email: string; // String!
    }
    registrationOptions: { // args
      email: string; // String!
    }
    reviseBlog: { // args
      blogPost: string; // String!
    }
    submitYcForm: { // args
      formData?: string | null; // String
      systemPrompt?: string | null; // String
      taskPrompt?: string | null; // String
    }
  }
  Query: {
    bfNode: { // args
      id?: string | null; // ID
    }
  }
  BfCurrentViewer: {
    contentCollection: { // args
      slug?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  BfCurrentViewer: "BfCurrentViewerLoggedIn" | "BfCurrentViewerLoggedOut"
  BfNode: "BfBlog" | "BfBlogPost" | "BfContentCollection" | "BfContentItem" | "BfOrganization" | "BfPerson"
  Node: "BfBlog" | "BfBlogPost" | "BfContentCollection" | "BfContentItem" | "BfCurrentViewerLoggedIn" | "BfCurrentViewerLoggedOut" | "BfOrganization" | "BfPerson"
}

export interface NexusGenTypeInterfaces {
  BfBlog: "BfNode" | "Node"
  BfBlogPost: "BfNode" | "Node"
  BfContentCollection: "BfNode" | "Node"
  BfContentItem: "BfNode" | "Node"
  BfCurrentViewerLoggedIn: "BfCurrentViewer" | "Node"
  BfCurrentViewerLoggedOut: "BfCurrentViewer" | "Node"
  BfOrganization: "BfNode" | "Node"
  BfPerson: "BfNode" | "Node"
  BfCurrentViewer: "Node"
  BfNode: "Node"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    __typename: true
    isTypeOf: false
    resolveType: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}